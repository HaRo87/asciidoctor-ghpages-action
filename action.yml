name: asciidoctor-ghpages
author: Manoel Campos da Silva Filho
branding:
  icon: book-open
  color: blue
description: Recursively converts every adoc file to html, renaming resulting README.html to index.html

inputs:
  asciidoctor_params:
    description: 'Extra parameters to passs to the asciidoctor command to customize the process of building adoc files'
    required: false
  adoc_file_ext:
    description: 'The extension you are using for your AsciiDoc Files'
    default: '.adoc'
    required: false
  pdf_build:
    description: 'Defines if a PDF ebook should be built along with the html files. That will generate an ebook.pdf file inside the gh-pages branch.'
    default: 'false'
    required: false
  ebook_main_adoc_file:
    description: 'Defines the name of the main AsciiDoc file that will be used if you are generating an ebook in PDF or any other supported format. For instance, if the main ebook file is "ebook.adoc", just inform "ebook" here.'
    default: 'README'
    required: false
              
runs: 
  using: "composite"

  # Steps represent a sequence of tasks that will be executed as part of the job
  steps:
  - name: Configure git
    run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    shell: bash

  - name: Asciidoctor Setup
    run: |
      sudo apt-get install gem -y
      sudo gem install asciidoctor
    shell: bash

  # Avoids keeping the commit history for the gh-pages branch, 
  # so that such a branch keeps only the last commit. 
  # But this slows down the GitHub Pages website build process.
  - name: Checking out the gh-pages branch without keeping its history
    run: |
      git branch -D gh-pages 1>/dev/null 2>/dev/null || true
      git log | head -n 1 | cut -d' ' -f2 > /tmp/commit-hash.txt
      git checkout --orphan gh-pages master 1>/dev/null
    shell: bash

  #- name: Checking out the gh-pages branch, keeping its history
  #  run: git checkout master -B gh-pages 1>/dev/null
  #  shell: bash  

  - name: Converting AsciiDoc files to HTML
    env: 
      INPUT_ASCIIDOCTOR_PARAMS: ${{ inputs.asciidoctor_params }}
      INPUT_ADOC_FILE_EXT: ${{ inputs.adoc_file_ext }}
    run: |
      if [[ $INPUT_ADOC_FILE_EXT != .* ]]; then 
          INPUT_ADOC_FILE_EXT=".$INPUT_ADOC_FILE_EXT"; 
      fi
      find . -name "*$INPUT_ADOC_FILE_EXT" | xargs asciidoctor -b html $INPUT_ASCIIDOCTOR_PARAMS
      for FILE in `find . -name "README.html"`; do 
          mv "$FILE" "`dirname $FILE`/index.html"; 
      done
      for FILE in `find . -name "*.html"`; do 
         git add -f "$FILE"; 
      done
      find . -name "*$INPUT_ADOC_FILE_EXT" | xargs git rm -f --cached
    shell: bash

  - name: Build an ebook.pdf from the AsciiDoc files
    env: 
      INPUT_PDF_BUILD: ${{ inputs.pdf_build }}
      INPUT_ADOC_FILE_EXT: ${{ inputs.adoc_file_ext }}
      INPUT_MAIN_ADOC_EBOOK_FILE: ${{ inputs.main_adoc_ebook_file }}
    run: |
      if [[ $INPUT_ADOC_FILE_EXT != .* ]]; then 
        INPUT_ADOC_FILE_EXT=".$INPUT_ADOC_FILE_EXT"; 
      fi
      if [[ $INPUT_PDF_BUILD == true ]]; then 
        PDF_FILE="ebook.pdf"
        INPUT_MAIN_ADOC_EBOOK_FILE="$INPUT_MAIN_ADOC_EBOOK_FILE$INPUT_ADOC_FILE_EXT"
        sudo gem install asciidoctor-pdf
        MSG="Building $PDF_FILE ebook from $INPUT_MAIN_ADOC_EBOOK_FILE"
        echo $MSG
        asciidoctor-pdf "$INPUT_MAIN_ADOC_EBOOK_FILE" -o "$PDF_FILE"
        git add -f "$PDF_FILE"; 
      fi
    shell: bash

  - name: Commiting changes to gh-pages branch
    env: 
      INPUT_ADOC_FILE_EXT: ${{ inputs.adoc_file_ext }}
    run: |
      MSG="Build $INPUT_ADOC_FILE_EXT Files for GitHub Pages from commit `cat /tmp/commit-hash.txt`"
      git rm -rf .github/
      git commit -m "$MSG" 1>/dev/null 
      git push -f --quiet --set-upstream origin gh-pages 1>/dev/null 
    shell: bash
